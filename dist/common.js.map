{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAOA;AACA;AAGA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAGA","sources":["webpack://wx-Fruit/._src_pages_index_fruit.jsx"],"sourcesContent":["import { View, Image, Button } from \"@tarojs/components\";\r\nimport { useState } from \"react\";\r\nimport Taro from \"@tarojs/taro\";\r\nimport A from \"../../image/jiantou.png\";\r\nimport Ad from \"../../image/add.png\";\r\nimport Le from \"../../image/reduce.png\";\r\nimport { window } from \"@tarojs/runtime\";\r\n\r\nexport default function Fruit() {\r\n  const fruitList = [\r\n    {\r\n      id: 1,\r\n      text: \"蓝莓到货‼️‼️高品质蓝莓🫐诱人的蓝色小浆果，皮薄、肉脆、味甜！营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"蓝莓\",\r\n      price: \"10\",\r\n      count: 0,\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"草莓\",\r\n      price: \"100\",\r\n      count: 0,\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"banana\",\r\n      price: \"10\",\r\n      count: 0,\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"宁夏大西瓜\",\r\n      price: \"10\",\r\n      count: 0,\r\n    },\r\n    {\r\n      id: 5,\r\n      text: \"营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"仙人球\",\r\n      price: \"10\",\r\n      count: 0,\r\n    },\r\n    {\r\n      id: 6,\r\n      text: \"营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"玛卡巴卡\",\r\n      price: \"10\",\r\n      count: 0,\r\n    },\r\n    {\r\n      id: 7,\r\n      text: \"营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"无锡底细\",\r\n      price: \"10\",\r\n      count: 0,\r\n    },\r\n    {\r\n      id: 8,\r\n      text: \"营养丰富，“浆果之王”美誉可不是盖的口感鲜甜，大果（16➕）：3盒55，6盒100\",\r\n      title: \"banan\",\r\n      price: \"10\",\r\n      count: 0,\r\n    },\r\n  ];\r\n  const [List, setList] = useState(fruitList);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n\r\n  function Less(id, text, title, price, count) {\r\n    const oldId = id;\r\n    const oldText = text;\r\n    const oldtitle = title;\r\n    const oldPrice = price;\r\n    const newCount = count - 1;\r\n    const newArray = {\r\n      id: oldId,\r\n      text: oldText,\r\n      title: oldtitle,\r\n      price: oldPrice,\r\n      count: newCount,\r\n    };\r\n    setList((List) => {\r\n      var ListA = JSON.parse(JSON.stringify(List));\r\n      ListA.splice(id - 1, 1, newArray);\r\n      return ListA;\r\n    });\r\n    //计算总价格\r\n    var newPrice = -1 * oldPrice;\r\n    setTotalPrice(totalPrice + newPrice);\r\n    //计算总数量\r\n    setTotalCount(totalCount - 1);\r\n  }\r\n\r\n  function Add(id, text, title, price, count) {\r\n    const oldId = id;\r\n    const oldText = text;\r\n    const oldtitle = title;\r\n    const oldPrice = price;\r\n    const newCount = count + 1;\r\n    const newArray = {\r\n      id: oldId,\r\n      text: oldText,\r\n      title: oldtitle,\r\n      price: oldPrice,\r\n      count: newCount,\r\n    };\r\n    setList((List) => {\r\n      var ListA = JSON.parse(JSON.stringify(List));\r\n      ListA.splice(id - 1, 1, newArray);\r\n      return ListA;\r\n    });\r\n    //计算总价格\r\n    var newPrice = 1 * oldPrice;\r\n    setTotalPrice(totalPrice + newPrice);\r\n    //计算总数量\r\n    setTotalCount(totalCount + 1);\r\n  }\r\n  function order() {\r\n    var orderArray = [];\r\n    for (var i = 0; i < List.length; i++) {\r\n      var count = List[i].count;\r\n      var title = List[i].title;\r\n      var price = List[i].price;\r\n      if (count) {\r\n        orderArray.push({ count, title, price });\r\n      }\r\n    }\r\n    //如果购物车无商品，不跳转页面\r\n    if (orderArray.length >= 1) {\r\n      Taro.navigateTo({\r\n        url: \"../order/index\",\r\n        events: {\r\n          // 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据\r\n          acceptDataFromOpenedPage: function (data) {\r\n            console.log(data);\r\n          },\r\n          someEvent: function (data) {\r\n            console.log(\"--->\", data);\r\n          },\r\n        },\r\n        success: function (res) {\r\n          // 通过eventChannel向被打开页面传送数据\r\n          res.eventChannel.emit(\"acceptDataFromOpenerPage\", {\r\n            data: { orderArray, totalPrice },\r\n          });\r\n        },\r\n      });\r\n    } else {\r\n      Taro.showToast({\r\n        title: \"请添加商品\",\r\n        icon: \"error\",\r\n        duration: 2000,\r\n      });\r\n    }\r\n  }\r\n  function clear() {\r\n    setTotalCount(0);\r\n    setTotalPrice(0);\r\n    setList(fruitList);\r\n    Taro.showLoading({\r\n      title: \"已清空购物车\",\r\n    });\r\n    setTimeout(function () {\r\n      Taro.hideLoading();\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <>\r\n      <view className=\"container\">\r\n        <view className=\"list\">\r\n          {List.map((item) => {\r\n            return (\r\n              <view key={item.id}>\r\n                <view className=\"Number\">\r\n                  <Image src={A} className=\"arrow\"></Image>\r\n                </view>\r\n                <view className=\"count\">\r\n                  <text>\r\n                    {item.id}.{item.title}\r\n                  </text>\r\n                  <text className=\"countText\">购买数量:{item.count}</text>\r\n                </view>\r\n                <view className=\"price\">\r\n                  单价:{item.price}\r\n                  <view className=\"countBtn\">\r\n                    <Image\r\n                      src={Le}\r\n                      className=\"btn\"\r\n                      onClick={() =>\r\n                        Less(\r\n                          item.id,\r\n                          item.text,\r\n                          item.title,\r\n                          item.price,\r\n                          item.count\r\n                        )\r\n                      }\r\n                    ></Image>\r\n                    <Image\r\n                      src={Ad}\r\n                      className=\"btn\"\r\n                      onClick={() =>\r\n                        Add(\r\n                          item.id,\r\n                          item.text,\r\n                          item.title,\r\n                          item.price,\r\n                          item.count\r\n                        )\r\n                      }\r\n                    ></Image>\r\n                  </view>\r\n                </view>\r\n                <view className=\"content\">{item.text}</view>\r\n              </view>\r\n            );\r\n          })}\r\n        </view>\r\n        <view className=\"total\">\r\n          <view className=\"content\">\r\n            <view className=\"totalP\">当前总价格:{totalPrice}</view>\r\n            <view className=\"totalC\">购物车商品总数:{totalCount}</view>\r\n          </view>\r\n          <view className=\"totalBtn\">\r\n            <view className=\"totalBtnOrder\">\r\n              <Button\r\n                size=\"mini\"\r\n                type=\"default\"\r\n                onClick={() => {\r\n                  order();\r\n                }}\r\n              >\r\n                下单\r\n              </Button>\r\n            </view>\r\n            <view className=\"totalBtnClear\">\r\n              <Button\r\n                size=\"mini\"\r\n                type=\"warn\"\r\n                onClick={() => {\r\n                  clear();\r\n                }}\r\n              >\r\n                清空\r\n              </Button>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"sourceRoot":""}