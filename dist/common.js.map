{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wx-Fruit/._src_components_vant-weapp_dist_common_component.js","webpack://wx-Fruit/._src_components_vant-weapp_dist_common_version.js","webpack://wx-Fruit/._src_components_vant-weapp_dist_mixins_basic.js","webpack://wx-Fruit/._src_utils_utils.jsx"],"sourcesContent":["import { basic } from '../mixins/basic';\nfunction mapKeys(source, target, map) {\n    Object.keys(map).forEach((key) => {\n        if (source[key]) {\n            target[map[key]] = source[key];\n        }\n    });\n}\nfunction VantComponent(vantOptions) {\n    const options = {};\n    mapKeys(vantOptions, options, {\n        data: 'data',\n        props: 'properties',\n        watch: 'observers',\n        mixins: 'behaviors',\n        methods: 'methods',\n        beforeCreate: 'created',\n        created: 'attached',\n        mounted: 'ready',\n        destroyed: 'detached',\n        classes: 'externalClasses',\n    });\n    // add default externalClasses\n    options.externalClasses = options.externalClasses || [];\n    options.externalClasses.push('custom-class');\n    // add default behaviors\n    options.behaviors = options.behaviors || [];\n    options.behaviors.push(basic);\n    // add relations\n    const { relation } = vantOptions;\n    if (relation) {\n        options.relations = relation.relations;\n        options.behaviors.push(relation.mixin);\n    }\n    // map field to form-field behavior\n    if (vantOptions.field) {\n        options.behaviors.push('wx://form-field');\n    }\n    // add default options\n    options.options = {\n        multipleSlots: true,\n        addGlobalClass: true,\n    };\n    Component(options);\n}\nexport { VantComponent };\n","let systemInfo;\nexport function getSystemInfoSync() {\n    if (systemInfo == null) {\n        systemInfo = wx.getSystemInfoSync();\n    }\n    return systemInfo;\n}\nfunction compareVersion(v1, v2) {\n    v1 = v1.split('.');\n    v2 = v2.split('.');\n    const len = Math.max(v1.length, v2.length);\n    while (v1.length < len) {\n        v1.push('0');\n    }\n    while (v2.length < len) {\n        v2.push('0');\n    }\n    for (let i = 0; i < len; i++) {\n        const num1 = parseInt(v1[i], 10);\n        const num2 = parseInt(v2[i], 10);\n        if (num1 > num2) {\n            return 1;\n        }\n        if (num1 < num2) {\n            return -1;\n        }\n    }\n    return 0;\n}\nfunction gte(version) {\n    const system = getSystemInfoSync();\n    return compareVersion(system.SDKVersion, version) >= 0;\n}\nexport function canIUseModel() {\n    return gte('2.9.3');\n}\nexport function canIUseFormFieldButton() {\n    return gte('2.10.3');\n}\nexport function canIUseAnimate() {\n    return gte('2.9.0');\n}\nexport function canIUseGroupSetData() {\n    return gte('2.4.0');\n}\nexport function canIUseNextTick() {\n    try {\n        return wx.canIUse('nextTick');\n    }\n    catch (e) {\n        return gte('2.7.1');\n    }\n}\nexport function canIUseCanvas2d() {\n    return gte('2.9.0');\n}\nexport function canIUseGetUserProfile() {\n    return !!wx.getUserProfile;\n}\n","export const basic = Behavior({\n    methods: {\n        $emit(name, detail, options) {\n            this.triggerEvent(name, detail, options);\n        },\n        set(data) {\n            this.setData(data);\n            return new Promise((resolve) => wx.nextTick(resolve));\n        },\n    },\n});\n","//获取当前时间\r\nfunction getNowTime() {\r\n  var date = new Date();\r\n  //年 getFullYear()：四位数字返回年份\r\n  var year = date.getFullYear(); //getFullYear()代替getYear()\r\n  //月 getMonth()：0 ~ 11\r\n  var month = date.getMonth() + 1;\r\n  //日 getDate()：(1 ~ 31)\r\n  var day = date.getDate();\r\n  //时 getHours()：(0 ~ 23)\r\n  var hour = date.getHours();\r\n  //分 getMinutes()： (0 ~ 59)\r\n  var minute = date.getMinutes();\r\n  //秒 getSeconds()：(0 ~ 59)\r\n  var second = date.getSeconds();\r\n\r\n  var time =\r\n    year +\r\n    \"-\" +\r\n    addZero(month) +\r\n    \"-\" +\r\n    addZero(day) +\r\n    \" \" +\r\n    addZero(hour) +\r\n    \":\" +\r\n    addZero(minute) +\r\n    \":\" +\r\n    addZero(second);\r\n  return time;\r\n}\r\n\r\n//小于10的拼接上0字符串\r\nfunction addZero(s) {\r\n  return s < 10 ? \"0\" + s : s;\r\n}\r\n\r\nfunction dateToString(date) {\r\n  var year = date.getFullYear();\r\n  var month = (date.getMonth() + 1).toString();\r\n  var day = date.getDate().toString();\r\n  if (month.length == 1) {\r\n    month = \"0\" + month;\r\n  }\r\n  if (day.length == 1) {\r\n    day = \"0\" + day;\r\n  }\r\n  var hours = date.getHours().toString();\r\n  if (hours.length == 1) {\r\n    hours = \"0\" + hours;\r\n  }\r\n  var mintus = date.getMinutes().toString();\r\n  if (mintus.length == 1) {\r\n    mintus = \"0\" + mintus;\r\n  }\r\n  var second = date.getSeconds().toString();\r\n  if (second.length == 1) {\r\n    second = \"0\" + second;\r\n  }\r\n  var dateTime =\r\n    year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + mintus + \":\" + second;\r\n  return dateTime;\r\n}\r\n//获取下标\r\nfunction getArrayIndex(arr, obj) {\r\n  var i = arr.length;\r\n  while (i--) {\r\n    if (arr[i].title === obj.title) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n//获取数组内最大的id\r\nfunction getMaxIndex(arr) {\r\n  var i = arr.length;\r\n  var maxId = arr[0].id;\r\n  while (i--) {\r\n    if (arr[i].id > maxId) {\r\n      maxId = arr[i].id;\r\n    }\r\n  }\r\n  return maxId;\r\n}\r\nexport { getNowTime, dateToString, getArrayIndex, getMaxIndex };\r\n"],"names":[],"sourceRoot":""}