{"version":3,"file":"pages/my/orderList/index.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AAAA;AACA;AAGA","sources":["webpack://wx-Fruit/._src_pages_my_orderList_index.tsx","webpack://wx-Fruit/./src/pages/my/orderList/index.tsx?53ec","webpack://wx-Fruit/._src_pages_my_orderList_list.jsx"],"sourcesContent":["import \"./index.scss\";\r\nimport List from \"./list\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <List />\r\n    </>\r\n  );\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"单据汇总\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/my/orderList/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import { View, Image, Button } from '@tarojs/components'\r\nimport Taro from '@tarojs/taro'\r\nimport { useState } from 'react'\r\nimport './index.scss'\r\nimport { getArrayIndex } from '../../../utils/utils'\r\nexport default function List() {\r\n  const result = Taro.getCurrentInstance().preloadData.ResultList\r\n  //计算总金额\r\n  const totalPrice = []\r\n\r\n  //遍历商品\r\n  const firstArray = []\r\n  for (var i = 0; i < result.length; i++) {\r\n    var Price = result[i].totalPrice\r\n    var clientName = result[i].clientName\r\n    var price = result[i].totalPrice\r\n    totalPrice.push(Price)\r\n    var secondArray = result[i].array\r\n    for (var j = 0; j < secondArray.length; j++) {\r\n      if (j === 0) {\r\n        firstArray.push({\r\n          name: clientName,\r\n          count: 0,\r\n          title: '购买人',\r\n          price: price,\r\n        })\r\n      } else {\r\n      }\r\n      firstArray.push(secondArray[j])\r\n    }\r\n  }\r\n  console.log(firstArray, totalPrice)\r\n  var countSum = firstArray.reduce(function (prev, cur) {\r\n    return cur.count + prev\r\n  }, 0)\r\n  var priceSum = totalPrice.reduce(function (prev, cur) {\r\n    return cur + prev\r\n  }, 0)\r\n\r\n  console.log(countSum, priceSum)\r\n  //数组去重,买了哪些商品\r\n  let newArr = firstArray.reduce((pre, cur) => {\r\n    if (!pre.includes(cur.title)) {\r\n      return pre.concat(cur.title)\r\n    } else {\r\n      return pre\r\n    }\r\n  }, [])\r\n  console.log(newArr)\r\n  const productsCount = []\r\n  for (var i = 0; i < newArr.length; i++) {\r\n    var title = newArr[i]\r\n    var newFirst = firstArray.filter((item) => item.title == title)\r\n    console.log(newFirst)\r\n    var count = newFirst.reduce(function (prev, cur) {\r\n      return cur.count + prev\r\n    }, 0)\r\n    productsCount.push(count)\r\n\r\n    console.log(productsCount)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <view className=\"all\">\r\n        <view className=\"title\">\r\n          本次团水果总件数:{Number(countSum).toFixed(1)}件\r\n        </view>\r\n        <view className=\"title\">\r\n          本次团水果总金额:{Number(priceSum).toFixed(2)}元\r\n        </view>\r\n      </view>\r\n\r\n      <view>\r\n        <text className=\"title\">以下是商品数量汇总:</text>\r\n      </view>\r\n      <View className=\"total\">\r\n        <View>\r\n          {newArr.map((item) => {\r\n            return (\r\n              <view\r\n                style={item == '购买人' ? 'display:none' : 'display:flex'}\r\n                className=\"totalTitle\">\r\n                品名:{item}\r\n              </view>\r\n            )\r\n          })}\r\n        </View>\r\n        <View>\r\n          {productsCount.map((item) => {\r\n            return (\r\n              <view\r\n                style={item === 0 ? 'display:none' : 'display:flex'}\r\n                className=\"totalCount\">\r\n                总件数:{item}件\r\n              </view>\r\n            )\r\n          })}\r\n        </View>\r\n      </View>\r\n\r\n      <View className=\"list\">\r\n        {firstArray.map((item) => {\r\n          return (\r\n            <>\r\n              <view\r\n                style={item.count != 0 ? 'display:flex' : 'display:none'}\r\n                className=\"list-content\"\r\n                key={firstArray.index}>\r\n                <view className=\"name\">{item.title}</view>\r\n                <view className=\"count\">数量:{item.count}</view>\r\n                <view className=\"price\">单价:{item.price}</view>\r\n              </view>\r\n              <view\r\n                style={item.count === 0 ? 'display:flex' : 'display:none'}\r\n                className=\"clientName\">\r\n                <view className=\"name\">购买人:{item.name}</view>\r\n                <view className=\"price\">\r\n                  本次应付:{item.price.toFixed(2)}元\r\n                </view>\r\n              </view>\r\n            </>\r\n          )\r\n        })}\r\n      </View>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"sourceRoot":""}