{"version":3,"file":"pages/my/history/index.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAkBA;AAAA;AAlBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;;;;;;;;;;;;;ACFA;AACA;AACA;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wx-Fruit/._src_pages_my_history_index.tsx","webpack://wx-Fruit/._src_pages_my_history_history.jsx","webpack://wx-Fruit/./src/pages/my/history/index.tsx?53b5","webpack://wx-Fruit/._node_modules_@babel_runtime_helpers_esm_arrayWithoutHoles.js","webpack://wx-Fruit/._node_modules_@babel_runtime_helpers_esm_iterableToArray.js","webpack://wx-Fruit/._node_modules_@babel_runtime_helpers_esm_nonIterableSpread.js","webpack://wx-Fruit/._node_modules_@babel_runtime_helpers_esm_toConsumableArray.js"],"sourcesContent":["import './index.scss'\r\nimport Order from './history'\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <Order />\r\n    </>\r\n  )\r\n}\r\n","import { View, Image, Button } from \"@tarojs/components\";\r\nimport Taro from \"@tarojs/taro\";\r\nimport { useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport { getArrayIndex } from \"../../../utils/utils\";\r\nimport { warn } from \"@tarojs/shared\";\r\nexport default function Order() {\r\n  const [Array, setArray] = useState([]);\r\n  const [Price, setPrice] = useState(\"无购买记录\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [locationId, setLocationId] = useState();\r\n  try {\r\n    Taro.getStorage({\r\n      key: \"oldArray\",\r\n      success: (res) => {\r\n        return res;\r\n      },\r\n    }).then((res) => {\r\n      setArray(res.data);\r\n    });\r\n    Taro.getStorage({\r\n      key: \"Price\",\r\n      success: (res) => {\r\n        return res;\r\n      },\r\n    }).then((res) => {\r\n      setPrice(res.data);\r\n    });\r\n    Taro.getStorage({\r\n      key: \"time\",\r\n      success: (res) => {\r\n        return res;\r\n      },\r\n    }).then((res) => {\r\n      setTime(res.data);\r\n    });\r\n    Taro.getStorage({\r\n      key: \"id\",\r\n      success: (res) => {\r\n        return res;\r\n      },\r\n    }).then((res) => {\r\n      setLocationId(res.data);\r\n    });\r\n  } catch (error) {\r\n    console.log(\"未获取到缓存\");\r\n  }\r\n  //撤销单据\r\n  const [type1, setType1] = useState(1);\r\n  async function revoke() {\r\n    const c1 = new Taro.cloud.Cloud({\r\n      resourceEnv: \"test-taro1-4gdydbsi405487f2\",\r\n    });\r\n    const db = Taro.cloud.database({});\r\n    await db\r\n      .collection(\"orderList\")\r\n      .where({\r\n        _id: locationId,\r\n      })\r\n      .remove();\r\n    Taro.showToast({\r\n      title: \"订单删除成功\",\r\n      icon: \"success\",\r\n      duration: 1000,\r\n    });\r\n    setType1(0);\r\n  }\r\n  //撤销成功返回下单\r\n  function goBack() {\r\n    Taro.switchTab({\r\n      url: \"../../index/index\",\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <view>\r\n        {Array.map((item) => {\r\n          return (\r\n            <View className=\"goods\" key={item.index}>\r\n              <view className=\"name\">\r\n                {getArrayIndex(Array, item) + 1}.{item.title}\r\n              </view>\r\n              <view className=\"count\">数量:{item.count}</view>\r\n              <view className=\"price\">单价:{item.price}</view>\r\n            </View>\r\n          );\r\n        })}\r\n      </view>\r\n      <view>订单总金额:{Number(Price).toFixed(2)}元</view>\r\n      <view>{time}</view>\r\n      <view>\r\n        <button\r\n          className=\"btn\"\r\n          style={type1 === 1 ? \"display:flex\" : \"display:none\"}\r\n          type=\"warn\"\r\n          onClick={() => revoke()}\r\n        >\r\n          撤销单据\r\n        </button>\r\n        <button\r\n          className=\"btn\"\r\n          style={type1 === 1 ? \"display:none\" : \"display:flex\"}\r\n          type=\"primary\"\r\n          onClick={() => goBack()}\r\n        >\r\n          重新下单\r\n        </button>\r\n      </view>\r\n      <view className=\"tip\">\r\n        <text>Tip:撤销按钮对当前订单仅生效一次，重复点击无效</text>\r\n      </view>\r\n    </>\r\n  );\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"个人订单\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/my/history/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}"],"names":[],"sourceRoot":""}