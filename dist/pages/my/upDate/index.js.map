{"version":3,"file":"pages/my/upDate/index.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAyBA;AAAA;AAzsources":["webpack://wx-Fruit/._src_pages_my_upDate_index.tsx","webpack://wx-Fruit/./src/pages/my/upDate/index.tsx?18ee","webpack://wx-Fruit/._src_pages_my_upDate_upDate.jsx"],"sourcesContent":["import UpDate from \"./upDate\";\r\nimport \"./index.scss\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <UpDate />\r\n    </>\r\n  );\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"更新商品\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/my/upDate/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import { useState, useEffect } from \"react\";\r\nimport Taro from \"@tarojs/taro\";\r\nimport { getMaxIndex } from \"../../../utils/utils\";\r\nexport default function UpDate() {\r\n  const [id, setId] = useState();\r\n  const [name, setName] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [price, setPrice] = useState();\r\n  function idInput(e) {\r\n    setId(e.detail.value);\r\n  }\r\n  function nameInput(e) {\r\n    setName(e.detail.value);\r\n  }\r\n  function contentInput(e) {\r\n    setContent(e.detail.value);\r\n  }\r\n  function priceInput(e) {\r\n    setPrice(e.detail.value);\r\n  }\r\n  //判断当前商品种数\r\n\r\n  useEffect(() => {\r\n    Taro.cloud\r\n      .callFunction({\r\n        // 要调用的云函数名称\r\n        name: \"fruitList\",\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        var x = res.result.data;\r\n\r\n        var count = getMaxIndex(x);\r\n        console.log(x, count);\r\n        setId(count + 1);\r\n      });\r\n  }, []);\r\n  //上传商品\r\n  const c1 = new Taro.cloud.Cloud({\r\n    resourceEnv: \"test-taro1-4gdydbsi405487f2\",\r\n  });\r\n  const db = Taro.cloud.database();\r\n  const good = [];\r\n  function upLoad() {\r\n    good.push({\r\n      id: Number(id + 1),\r\n      title: name,\r\n      text: content,\r\n      price: Number(price),\r\n      count: \"\",\r\n    });\r\n    console.log(good[0]);\r\n    if (good[0].id && good[0].title && good[0].text && good[0].price) {\r\n      db.collection(\"fruitList\")\r\n        .add({\r\n          data: good[0],\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          Taro.showToast({\r\n            title: \"创建成功\",\r\n            icon: \"success\",\r\n            duration: 2000,\r\n          });\r\n        })\r\n        .catch(console.error);\r\n      setId(Number(id + 1));\r\n      setName(\"\");\r\n      setContent(\"\");\r\n      setPrice();\r\n    } else {\r\n      Taro.showToast({\r\n        title: \"商品信息不完整\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n\r\n    console.log(112321);\r\n  }\r\n  //删除商品\r\n  const [title2, setTitle2] = useState();\r\n  function idInput1(e) {\r\n    setTitle2(e.detail.value);\r\n  }\r\n  async function del() {\r\n    if (title2) {\r\n      await db\r\n        .collection(\"fruitList\")\r\n        .where({\r\n          title: title2,\r\n        })\r\n        .remove()\r\n        .then((res) => {\r\n          console.log(res);\r\n          Taro.showToast({\r\n            title: \"删除成功\",\r\n            icon: \"success\",\r\n            duration: 2000,\r\n          });\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      Taro.showToast({\r\n        title: \"请输入品名\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  }\r\n\r\n  //返回首页\r\n  function back() {\r\n    Taro.switchTab({\r\n      url: \"../../index/index\",\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <view className=\"goods\">\r\n        <view className=\"line\">\r\n          <text>品名:</text>\r\n          <input value={name} onInput={(e) => nameInput(e)} type=\"text\" />\r\n        </view>\r\n        <view className=\"line\">\r\n          <text>简介:</text>\r\n          <input value={content} onInput={(e) => contentInput(e)} type=\"text\" />\r\n        </view>\r\n        <view className=\"line\">\r\n          <text>价格:</text>\r\n          <input value={price} onInput={(e) => priceInput(e)} type=\"text\" />\r\n        </view>\r\n      </view>\r\n      <view className=\"btn\">\r\n        <button onClick={() => upLoad()} className=\"btn1\" type=\"primary\">\r\n          新建上架\r\n        </button>\r\n      </view>\r\n      <view className=\"btn\">\r\n        <view className=\"line\">\r\n          <text>品名:</text>\r\n          <input value={title2} onInput={(e) => idInput1(e)} type=\"text\" />\r\n        </view>\r\n        <text>删除商品需填入对应的品名</text>\r\n        <button onClick={() => del()} className=\"btn2\" type=\"warn\">\r\n          删除下架\r\n        </button>\r\n      </view>\r\n      <view>\r\n        <button className=\"btn2\" onClick={() => back()}>\r\n          返回下单\r\n        </button>\r\n      </view>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"sourceRoot":""}