{"version":3,"file":"pages/my/upDate/index.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAyBA;AAAA;AAzBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AAGA","sources":["webpack://wx-Fruit/._src_pages_my_upDate_index.tsx","webpack://wx-Fruit/./src/pages/my/upDate/index.tsx?18ee","webpack://wx-Fruit/._src_pages_my_upDate_upDate.jsx"],"sourcesContent":["import UpDate from \"./upDate\";\r\nimport \"./index.scss\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <UpDate />\r\n    </>\r\n  );\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"更新商品\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/my/upDate/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import { useState, useEffect } from 'react'\r\nimport Taro from '@tarojs/taro'\r\nimport { getMaxIndex } from '../../../utils/utils'\r\nexport default function UpDate() {\r\n  const [id, setId] = useState()\r\n  const [name, setName] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [price, setPrice] = useState()\r\n  function idInput(e) {\r\n    setId(e.detail.value)\r\n  }\r\n  function nameInput(e) {\r\n    setName(e.detail.value)\r\n  }\r\n  function contentInput(e) {\r\n    setContent(e.detail.value)\r\n  }\r\n  function priceInput(e) {\r\n    setPrice(e.detail.value)\r\n  }\r\n  //判断当前商品种数\r\n\r\n  useEffect(() => {\r\n    Taro.cloud\r\n      .callFunction({\r\n        // 要调用的云函数名称\r\n        name: 'fruitList',\r\n      })\r\n      .then((res) => {\r\n        console.log(res)\r\n        var x = res.result.data\r\n\r\n        var count = getMaxIndex(x)\r\n        console.log(x, count)\r\n        setId(count + 1)\r\n      })\r\n  }, [])\r\n  //上传商品\r\n  const c1 = new Taro.cloud.Cloud({\r\n    resourceEnv: 'test-taro1-4gdydbsi405487f2',\r\n  })\r\n  const db = Taro.cloud.database()\r\n  const good = []\r\n  function upLoad() {\r\n    good.push({\r\n      id: Number(id + 1),\r\n      title: name,\r\n      text: content,\r\n      price: Number(price),\r\n      count: '',\r\n    })\r\n    console.log(good[0])\r\n    if (good[0].id && good[0].title && good[0].text && good[0].price) {\r\n      db.collection('fruitList')\r\n        .add({\r\n          data: good[0],\r\n        })\r\n        .then((res) => {\r\n          console.log(res)\r\n          Taro.showToast({\r\n            title: '创建成功',\r\n            icon: 'success',\r\n            duration: 2000,\r\n          })\r\n        })\r\n        .catch(console.error)\r\n      setId(Number(id + 1))\r\n      setName('')\r\n      setContent('')\r\n      setPrice()\r\n    } else {\r\n      Taro.showToast({\r\n        title: '商品信息不完整',\r\n        icon: 'error',\r\n      })\r\n    }\r\n\r\n    console.log(112321)\r\n  }\r\n  //删除商品\r\n  const [title2, setTitle2] = useState()\r\n  function idInput1(e) {\r\n    setTitle2(e.detail.value)\r\n  }\r\n  async function del() {\r\n    if (title2) {\r\n      await db\r\n        .collection('fruitList')\r\n        .where({\r\n          title: title2,\r\n        })\r\n        .remove()\r\n        .then((res) => {\r\n          console.log(res)\r\n          Taro.showToast({\r\n            title: '删除成功',\r\n            icon: 'success',\r\n            duration: 2000,\r\n          })\r\n        })\r\n        .catch(console.error)\r\n    } else {\r\n      Taro.showToast({\r\n        title: '请输入品名',\r\n        icon: 'error',\r\n      })\r\n    }\r\n  }\r\n\r\n  //返回首页\r\n  function back() {\r\n    Taro.switchTab({\r\n      url: '../../index/index',\r\n    })\r\n  }\r\n  //传图\r\n  const [selctedimg, setSelctedimg] = useState([])\r\n  function upLoadImage() {\r\n    Taro.chooseMedia({\r\n      count: 9,\r\n      mediaType: ['image', 'video'],\r\n      sourceType: ['album', 'camera'],\r\n      maxDuration: 30,\r\n      camera: 'back',\r\n      success: (res) => {\r\n        // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\r\n        const tempFilePaths = res.tempFiles\r\n        const PathsArray = []\r\n        for (var i = 0; i < tempFilePaths.length; i++) {\r\n          PathsArray.push(tempFilePaths[i].tempFilePath)\r\n        }\r\n        // const fileName = res.tempFilePaths.slice(11)\r\n        console.log(PathsArray)\r\n        setSelctedimg(PathsArray)\r\n      },\r\n    })\r\n  }\r\n  function upLoadImageFiles() {\r\n    Taro.cloud.uploadFile({\r\n      cloudPath: 'image/.png',\r\n      filePath: PathsArray[0], // 文件路径\r\n      success: (res) => {\r\n        // get resource ID\r\n        console.log(res.fileID)\r\n        setSelctedimg(res.fileID)\r\n      },\r\n      fail: (err) => {\r\n        // handle error\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <view className=\"page\">\r\n        <view className=\"goods\">\r\n          <view className=\"line\">\r\n            <text>品名:</text>\r\n            <input value={name} onInput={(e) => nameInput(e)} type=\"text\" />\r\n          </view>\r\n          <view className=\"line\">\r\n            <text>简介:</text>\r\n            <input\r\n              value={content}\r\n              onInput={(e) => contentInput(e)}\r\n              type=\"text\"\r\n            />\r\n          </view>\r\n          <view className=\"line\">\r\n            <text>价格:</text>\r\n            <input value={price} onInput={(e) => priceInput(e)} type=\"text\" />\r\n          </view>\r\n        </view>\r\n        <view className=\"btn\">\r\n          <button onClick={() => upLoad()} className=\"btn1\" type=\"primary\">\r\n            新建上架\r\n          </button>\r\n        </view>\r\n        <view className=\"btn\">\r\n          <view className=\"line\">\r\n            <text>品名:</text>\r\n            <input value={title2} onInput={(e) => idInput1(e)} type=\"text\" />\r\n          </view>\r\n          <text>删除商品需填入对应的品名</text>\r\n          <button onClick={() => del()} className=\"btn2\" type=\"warn\">\r\n            删除下架\r\n          </button>\r\n        </view>\r\n        <view>\r\n          <button className=\"btn2\" onClick={() => back()}>\r\n            返回下单\r\n          </button>\r\n        </view>\r\n        <view className=\"btn\">\r\n          <button onClick={() => upLoadImage()} className=\"btn1\" type=\"primary\">\r\n            选择图片\r\n          </button>\r\n          <button\r\n            onClick={() => upLoadImageFiles()}\r\n            className=\"btn1\"\r\n            type=\"primary\">\r\n            上传图片\r\n          </button>\r\n          <text>图片预览：</text>\r\n          <view className=\"img\">\r\n            {selctedimg.map((item) => {\r\n              return (\r\n                <view key={item.index}>\r\n                  <image mode=\"aspectFill\" src={item}></image>\r\n                </view>\r\n              )\r\n            })}\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"sourceRoot":""}