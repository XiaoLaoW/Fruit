{"version":3,"file":"pages/index/index.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAWA;AAAA;AAXA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAoEA;AAAA;AApEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAfA;AAgjjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wx-Fruit/._src_pages_index_index.tsx","webpack://wx-Fruit/._src_pages_index_fruit.jsx","webpack://wx-Fruit/./src/pages/index/index.tsx?743a"],"sourcesContent":["import Fruit from \"./fruit\";\r\nimport \"./index.scss\";\r\n\r\nexport default function Index() {\r\n  return (\r\n    <>\r\n      <Fruit />\r\n    </>\r\n  );\r\n}\r\n","import { View, Image, Input, Button } from '@tarojs/components'\r\nimport { useState, useEffect } from 'react'\r\nimport Taro, { eventCenter, usePullDownRefresh } from '@tarojs/taro'\r\nimport A from '../../image/jiantou.png'\r\nimport Ad from '../../image/add.png'\r\nimport Le from '../../image/reduce.png'\r\nimport { eventHandler, window } from '@tarojs/runtime'\r\nimport { getNowTime, getArrayIndex } from '../../utils/utils'\r\nexport default function Fruit() {\r\n  // const ListValue = Taro.getCurrentInstance().preloadData;\r\n  const c1 = new Taro.cloud.Cloud({\r\n    resourceEnv: 'test-taro1-4gdydbsi405487f2',\r\n  })\r\n  const db = Taro.cloud.database()\r\n  const clientName = Taro.getStorageSync('yourName') // 获取本地缓存中的用户名\r\n  const [List, setList] = useState([])\r\n  const [totalPrice, setTotalPrice] = useState(0)\r\n  const [totalCount, setTotalCount] = useState(0)\r\n  const [searchArray, setSearchArray] = useState([])\r\n  const [searchIpt, setSearchIpt] = useState(true)\r\n  //获取水果列表\r\n  useEffect(() => {\r\n    Taro.showNavigationBarLoading()\r\n    Taro.cloud\r\n      .callFunction({\r\n        // 要调用的云函数名称\r\n        name: 'fruitList',\r\n        // 传递给云函数的event参数\r\n      })\r\n      .then((res) => {\r\n        setList(res.result.data)\r\n        Taro.hideNavigationBarLoading()\r\n      })\r\n      .catch((err) => {\r\n        console.log(error)\r\n      })\r\n    // db.collection(\"fruitList\")\r\n    //   .get()\r\n    //   .then((res) => {\r\n    //     setList(res.data);\r\n    //     Taro.hideNavigationBarLoading();\r\n    //   });\r\n  }, []) //页面加载时获取列表数据\r\n  async function FruitList1() {\r\n    Taro.cloud\r\n      .callFunction({\r\n        // 要调用的云函数名称\r\n        name: 'fruitList',\r\n      })\r\n      .then((res) => {\r\n        setList(res.result.data)\r\n      })\r\n      .catch((err) => {})\r\n  }\r\n  //下拉刷新水果列表\r\n  usePullDownRefresh(async () => {\r\n    Taro.cloud\r\n      .callFunction({\r\n        // 要调用的云函数名称\r\n        name: 'fruitList',\r\n      })\r\n      .then((res) => {\r\n        console.log('已更新:')\r\n\r\n        setList(() => {\r\n          var newList1 = []\r\n\r\n          const newList = res.result.data\r\n          console.log(1, newList1, newList)\r\n          if (List.length < newList.length) {\r\n            for (var i = 0; i < List.length; i++) {\r\n              newList1.push(List[i])\r\n            }\r\n            for (var j = List.length; j < newList.length; j++) {\r\n              newList1.push(newList[j])\r\n            }\r\n          } else if (List.length > newList.length) {\r\n            for (var x = 0; x < List.length; x++) {\r\n              var obj = List[x]\r\n              for (var y = 0; y < newList.length; y++) {\r\n                var newObj = newList[y]\r\n                if (obj.title === newObj.title) {\r\n                  newList1.push(obj)\r\n                }\r\n              }\r\n            }\r\n            var price = 0\r\n            var count = 0\r\n            for (var j = 0; j < newList1.length; j++) {\r\n              price = newList1[j].count * newList1[j].price + price\r\n              count = newList1[j].count + count\r\n            }\r\n            console.log(price, count)\r\n            setTotalPrice(price)\r\n            setTotalCount(count)\r\n          } else {\r\n            for (var i = 0; i < List.length; i++) {\r\n              newList1.push(List[i])\r\n            }\r\n          }\r\n\r\n          console.log(2, newList1)\r\n          return newList1\r\n        })\r\n      })\r\n\r\n    Taro.stopPullDownRefresh()\r\n  })\r\n  //从数据获取最新列表后，再把原有的商品数量添加到新列表里\r\n\r\n  function Less(item, id, text, title, price, count) {\r\n    const newId = getArrayIndex(List, item)\r\n    const newId1 = getArrayIndex(searchArray, item)\r\n    const oldId = id\r\n    const oldText = text\r\n    const oldtitle = title\r\n    const oldPrice = price\r\n    const newCount = Number(count) - 1\r\n    const newArray = {\r\n      id: oldId,\r\n      text: oldText,\r\n      title: oldtitle,\r\n      price: oldPrice,\r\n      count: newCount,\r\n    }\r\n    setList((List) => {\r\n      var ListA = JSON.parse(JSON.stringify(List))\r\n      ListA.splice(newId, 1, newArray)\r\n      return ListA\r\n    })\r\n    setSearchArray((searchArray) => {\r\n      var ListA = JSON.parse(JSON.stringify(searchArray))\r\n      ListA.splice(newId1, 1, newArray)\r\n      return ListA\r\n    })\r\n    //计算总价格\r\n    var newPrice = -1 * oldPrice\r\n    setTotalPrice(totalPrice + newPrice)\r\n    //计算总数量\r\n    setTotalCount(totalCount - 1)\r\n  }\r\n\r\n  function Add(item, id, text, title, price, count) {\r\n    const newId = getArrayIndex(List, item)\r\n    const newId1 = getArrayIndex(searchArray, item)\r\n    const oldId = id\r\n    const oldText = text\r\n    const oldtitle = title\r\n    const oldPrice = price\r\n    const newCount = Number(count) + 1\r\n    const newArray = {\r\n      id: oldId,\r\n      text: oldText,\r\n      title: oldtitle,\r\n      price: oldPrice,\r\n      count: newCount,\r\n    }\r\n    setList((List) => {\r\n      var ListA = JSON.parse(JSON.stringify(List))\r\n      ListA.splice(newId, 1, newArray)\r\n      return ListA\r\n    })\r\n    setSearchArray((searchArray) => {\r\n      var ListA = JSON.parse(JSON.stringify(searchArray))\r\n      ListA.splice(newId1, 1, newArray)\r\n      return ListA\r\n    })\r\n    //计算总价格\r\n    var newPrice = 1 * oldPrice\r\n    setTotalPrice(totalPrice + newPrice)\r\n    //计算总数量\r\n    setTotalCount(totalCount + 1)\r\n  }\r\n  async function order() {\r\n    var orderArray = []\r\n    for (var i = 0; i < List.length; i++) {\r\n      var id = i\r\n      var count = Number(List[i].count)\r\n      var title = List[i].title\r\n      var price = List[i].price\r\n      if (count > 0 || count < 0) {\r\n        orderArray.push({ id, count, title, price })\r\n      }\r\n    }\r\n\r\n    //如果购物车无商品，不跳转页面\r\n    if ((orderArray.length >= 1) & (clientName != null)) {\r\n      const newArray = []\r\n      newArray.value = orderArray\r\n      const Price = Number\r\n      Price.vaule = totalPrice\r\n      Taro.preload({ newArray: orderArray, totalPrice: totalPrice })\r\n      jumpClear()\r\n      //跳转页面\r\n      Taro.navigateTo({\r\n        url: '../order/index',\r\n      })\r\n      //上传订单、开单时间和总金额\r\n\r\n      const addRes = await db\r\n        .collection('orderList')\r\n        .add({\r\n          data: {\r\n            array: orderArray,\r\n            totalPrice: totalPrice,\r\n            clientName: clientName,\r\n            time: getNowTime(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          return res\r\n        })\r\n        .catch((err) => {\r\n          return err\r\n        })\r\n      var id = addRes._id\r\n      console.log(id)\r\n      Taro.setStorageSync('id', id)\r\n\r\n      console.log(addRes)\r\n      if (!addRes._id) {\r\n        Taro.showToast({\r\n          title: '下单失败',\r\n          icon: 'error',\r\n          duration: 1000,\r\n        })\r\n      } else {\r\n        Taro.showToast({\r\n          title: '下单成功',\r\n          icon: 'success',\r\n          duration: 1000,\r\n        })\r\n      }\r\n    } else {\r\n      Taro.showToast({\r\n        title: '请添加商品',\r\n        icon: 'error',\r\n        duration: 1000,\r\n      })\r\n    }\r\n  }\r\n  //手动清空清空购物车\r\n  function clear() {\r\n    setTotalCount(0)\r\n    setTotalPrice(0)\r\n    FruitList1()\r\n    Taro.showLoading({\r\n      title: '已清空购物车',\r\n    })\r\n    setTimeout(function () {\r\n      Taro.hideLoading()\r\n    }, 2000)\r\n  }\r\n  //跳转页面时清空购物车\r\n  function jumpClear() {\r\n    setTotalCount(0)\r\n    setTotalPrice(0)\r\n    FruitList1()\r\n  }\r\n  //更新数量\r\n  function updateCount(e, item) {\r\n    const newId = getArrayIndex(List, item)\r\n    var inputCount = e.detail.value.replace(',', '.')\r\n    console.log(inputCount)\r\n\r\n    if (inputCount.includes(',')) {\r\n      Taro.showToast({\r\n        title: '请检查符号数量',\r\n        icon: 'error',\r\n      })\r\n      const oldId = item.id\r\n      const oldText = item.text\r\n      const oldtitle = item.title\r\n      const oldPrice = item.price\r\n      const oldCount = item.count\r\n      const newArray = {\r\n        id: oldId,\r\n        text: oldText,\r\n        title: oldtitle,\r\n        price: oldPrice,\r\n        count: oldCount,\r\n      }\r\n      setList((List) => {\r\n        var ListA = JSON.parse(JSON.stringify(List))\r\n        ListA.splice(newId, 1, newArray)\r\n        return ListA\r\n      })\r\n    } else {\r\n      const oldId = item.id\r\n      const oldText = item.text\r\n      const oldtitle = item.title\r\n      const oldPrice = item.price\r\n      const oldCount = item.count\r\n      const newCount = inputCount\r\n      const newArray = {\r\n        id: oldId,\r\n        text: oldText,\r\n        title: oldtitle,\r\n        price: oldPrice,\r\n        count: newCount,\r\n      }\r\n      setList((List) => {\r\n        var ListA = JSON.parse(JSON.stringify(List))\r\n        ListA.splice(newId, 1, newArray)\r\n        console.log(newArray)\r\n        return ListA\r\n      })\r\n      //计算总价格 计算总数量\r\n\r\n      var newPrice = inputCount * oldPrice - oldCount * Number(oldPrice)\r\n      setTotalPrice(totalPrice + Number(newPrice))\r\n      var newTotalCount = totalCount - Number(oldCount) + Number(inputCount)\r\n      setTotalCount(newTotalCount)\r\n    }\r\n  }\r\n  function updateSearchCount(event, item) {\r\n    console.log(item)\r\n    const newId = getArrayIndex(searchArray, item)\r\n    const newId1 = getArrayIndex(List, item)\r\n    var inputCount = event.detail.value.replace(',', '.')\r\n    if (inputCount.includes(',')) {\r\n      Taro.showToast({\r\n        title: '请检查符号数量',\r\n        icon: 'error',\r\n      })\r\n      const oldId = item.id\r\n      const oldText = item.text\r\n      const oldtitle = item.title\r\n      const oldPrice = item.price\r\n      const oldCount = item.count\r\n      const newArray = {\r\n        id: oldId,\r\n        text: oldText,\r\n        title: oldtitle,\r\n        price: oldPrice,\r\n        count: oldCount,\r\n      }\r\n      setSearchArray((searchArray) => {\r\n        var ListA = JSON.parse(JSON.stringify(searchArray))\r\n        ListA.splice(newId, 1, newArray)\r\n        return ListA\r\n      })\r\n    } else {\r\n      const oldId = item.id\r\n      const oldText = item.text\r\n      const oldtitle = item.title\r\n      const oldPrice = item.price\r\n      const oldCount = item.count\r\n      const newCount = inputCount\r\n      const newArray = {\r\n        id: oldId,\r\n        text: oldText,\r\n        title: oldtitle,\r\n        price: oldPrice,\r\n        count: newCount,\r\n      }\r\n      setSearchArray((searchArray) => {\r\n        var ListA = JSON.parse(JSON.stringify(searchArray))\r\n        ListA.splice(newId, 1, newArray)\r\n        return ListA\r\n      })\r\n      setList((List) => {\r\n        var ListA = JSON.parse(JSON.stringify(List))\r\n        ListA.splice(newId1, 1, newArray)\r\n        console.log(newId1, newArray, ListA)\r\n        return ListA\r\n      })\r\n      //计算总价格 计算总数量\r\n      var newPrice = inputCount * oldPrice - oldCount * Number(oldPrice)\r\n      setTotalPrice(totalPrice + Number(newPrice))\r\n      var newTotalCount = totalCount - Number(oldCount) + Number(inputCount)\r\n      setTotalCount(newTotalCount)\r\n    }\r\n  }\r\n  function search(e) {\r\n    if (e.detail) {\r\n      var content = e.detail.value\r\n      var newSearchArray = List.filter((item) => {\r\n        return item.title.includes(content)\r\n      })\r\n      console.log(newSearchArray.length)\r\n      setSearchArray(newSearchArray)\r\n      if (newSearchArray.length === 0) {\r\n        Taro.showToast({\r\n          title: '未找到水果',\r\n          icon: 'error',\r\n          duration: 2000,\r\n        })\r\n      }\r\n    }\r\n  }\r\n  function hide() {\r\n    setSearchIpt(false)\r\n  }\r\n  function back() {\r\n    setSearchIpt(true)\r\n    setSearchArray([])\r\n  }\r\n  return (\r\n    <>\r\n      <view className=\"search\">\r\n        <van-search\r\n          ConfirmType=\"search\"\r\n          onFocus={() => hide()}\r\n          onBlur={(e) => search(e)}\r\n          placeholder=\"请输入搜索关键词\"\r\n        />\r\n        <button\r\n          onClick={() => back()}\r\n          size=\"mini\"\r\n          style={searchIpt == true ? 'display:none' : 'display:flex'}>\r\n          返回列表\r\n        </button>\r\n        <view\r\n          className=\"search-content\"\r\n          style={searchIpt == true ? 'display:none' : 'display:flex'}>\r\n          {searchArray.map((item) => {\r\n            return (\r\n              <view key={item.id}>\r\n                <view className=\"Number\">\r\n                  <Image src={A} className=\"arrow\"></Image>\r\n                </view>\r\n                <view className=\"count\">\r\n                  <text>\r\n                    {getArrayIndex(searchArray, item) + 1}.{item.title}\r\n                  </text>\r\n                  <Input\r\n                    className=\"input\"\r\n                    placeholder=\"0\"\r\n                    type=\"digit\"\r\n                    value={item.count}\r\n                    onBlur={(event) => updateSearchCount(event, item)}\r\n                  />\r\n                  <text className=\"countText\">购买数量:</text>\r\n                </view>\r\n                <view className=\"price\">单价:{item.price}</view>\r\n                <view className=\"countBtn\">\r\n                  <Image\r\n                    src={Le}\r\n                    className=\"btn\"\r\n                    onClick={() =>\r\n                      Less(\r\n                        item,\r\n                        item.id,\r\n                        item.text,\r\n                        item.title,\r\n                        item.price,\r\n                        item.count\r\n                      )\r\n                    }></Image>\r\n                  <Image\r\n                    src={Ad}\r\n                    className=\"btn\"\r\n                    onClick={() =>\r\n                      Add(\r\n                        item,\r\n                        item.id,\r\n                        item.text,\r\n                        item.title,\r\n                        item.price,\r\n                        item.count\r\n                      )\r\n                    }></Image>\r\n                </view>\r\n                <view className=\"content\">{item.text}</view>\r\n              </view>\r\n            )\r\n          })}\r\n        </view>\r\n      </view>\r\n\r\n      <view\r\n        className=\"container\"\r\n        style={searchIpt == false ? 'display:none' : 'display:flex'}>\r\n        <view className=\"list\">\r\n          {List.map((item) => {\r\n            return (\r\n              <view key={item.id}>\r\n                <view className=\"Number\">\r\n                  <Image src={A} className=\"arrow\"></Image>\r\n                </view>\r\n                <view className=\"count\">\r\n                  <text>\r\n                    {getArrayIndex(List, item) + 1}.{item.title}\r\n                  </text>\r\n                  <Input\r\n                    className=\"input\"\r\n                    placeholder=\"0\"\r\n                    type=\"digit\"\r\n                    value={item.count}\r\n                    onBlur={(event) => updateCount(event, item)}\r\n                  />\r\n                  <text className=\"countText\">购买数量:</text>\r\n                </view>\r\n                <view className=\"price\">\r\n                  单价:{item.price}\r\n                  <view className=\"countBtn\">\r\n                    <Image\r\n                      src={Le}\r\n                      className=\"btn\"\r\n                      onClick={() =>\r\n                        Less(\r\n                          item,\r\n                          item.id,\r\n                          item.text,\r\n                          item.title,\r\n                          item.price,\r\n                          item.count\r\n                        )\r\n                      }></Image>\r\n                    <Image\r\n                      src={Ad}\r\n                      className=\"btn\"\r\n                      onClick={() =>\r\n                        Add(\r\n                          item,\r\n                          item.id,\r\n                          item.text,\r\n                          item.title,\r\n                          item.price,\r\n                          item.count\r\n                        )\r\n                      }></Image>\r\n                  </view>\r\n                </view>\r\n                <view className=\"content\">{item.text}</view>\r\n              </view>\r\n            )\r\n          })}\r\n        </view>\r\n        <view className=\"total\">\r\n          <view className=\"content\">\r\n            <view className=\"totalP\">当前总价格:{totalPrice.toFixed(2)}</view>\r\n            <view className=\"totalC\">购物车商品总数:{totalCount}</view>\r\n          </view>\r\n          <view className=\"totalBtn\">\r\n            <view className=\"totalBtnOrder\">\r\n              <Button\r\n                size=\"mini\"\r\n                type=\"default\"\r\n                onClick={() => {\r\n                  order()\r\n                }}>\r\n                下单\r\n              </Button>\r\n            </view>\r\n            <view className=\"totalBtnClear\">\r\n              <Button\r\n                size=\"mini\"\r\n                type=\"warn\"\r\n                onClick={() => {\r\n                  clear()\r\n                }}>\r\n                清空\r\n              </Button>\r\n            </view>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </>\r\n  )\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"拼果团\",\"enablePullDownRefresh\":true,\"onReachBottomDistance\":30,\"backgroundTextStyle\":\"dark\",\"usingComponents\":{\"van-search\":\"../../components/vant-weapp/dist/search/index\"}};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}